#!/bin/sh
ECHO=`which echo`
BUILDDIR="../../build"
FIRST_TIME=0
PROJECT=eagle
SITE_CONF=conf/site.conf
USER_SITE_CONF_FOLDER="${HOME}/.config/yocto/${PROJECT}"
USER_SITE_CONF="${USER_SITE_CONF_FOLDER}/site.conf"

cd layers/openembedded-core/
if [ ! -f ${BUILDDIR}/conf/local.conf ]; then
	FIRST_TIME=1
fi

. ./oe-init-build-env ${BUILDDIR}

echo ""
echo "Eagle targets:"
echo "    eagle-x11-image"

if [ $FIRST_TIME -eq 1 ]; then
	mkdir -p conf
	cp ../layers/meta-seacloud-bsp/buildconf/*.conf conf/

	echo ""
	$ECHO -e "\033[1mA sample conf/local.conf file has been created"
	$ECHO -e "Check and edit the file to adapt to your local needs\033[0m"
	echo "The following likely need your attention:"
	echo "BB_NUMBER_THREADS, PARALLEL_MAKE, DL_DIR"
fi

echo ""
echo "Checking site.conf file options:"
echo "set NO_SITECONF to disable usage of site.conf to have local yocto settings"
echo "set CUSTOM_SITECONF to a file path to use that file as site.conf"
echo "By default ${USER_SITE_CONF} will be used if present and if missing site.conf.user will be used as default settings"

if [ ! -z "${NO_SITECONF}" ] ; then
	echo ""
	echo "NO_SITECONF is defined"
	echo "Empty site.conf is generated"
	echo "# This file has been generated by export because NO_SITECONF has been detected" > ${SITE_CONF}
fi

if [ ! -z "${CUSTOM_SITECONF}" ] ; then
	echo ""
	echo "CUSTOM_SITECONF is defined"
	if [ -f "${CUSTOM_SITECONF}" ] ; then
		echo "A link is created to ${CUSTOM_SITECONF}"
		ln -sfn "${CUSTOM_SITECONF}" "${SITE_CONF}"
	else
		echo "CUSTOM_SITECONF is not pointing any valid file (content:${CUSTOM_SITECONF})"
	fi
fi

if [ ! -f ${SITE_CONF} ] ; then
	if [ -f "${USER_SITE_CONF}" ]; then
		echo ""
		echo "${USER_SITE_CONF} is detected"
		echo "A link is created to ${USER_SITE_CONF}"
		ln -sfn "${USER_SITE_CONF}" "${SITE_CONF}"
	else
		# Install and customize side.conf.user sample
		mkdir -p "${USER_SITE_CONF_FOLDER}"
		cp ../layers/meta-seacloud-bsp/buildconf/site.conf.samples/site.conf.user "${USER_SITE_CONF}"
		sed -i s%/home/user%/home/$USER%  "${USER_SITE_CONF}"
	fi
fi

if [ -f ${SITE_CONF} ] ; then
	echo ""
	echo "Current site.conf content:"
	cat  ${SITE_CONF}
fi
